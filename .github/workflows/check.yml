name: Optimized CI/CD Pipeline
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
 
jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-deps.outputs.cache-hit }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Cache dependencies
      id: cache-deps
      uses: actions/cache@v3
      with:
        path: |
          node_modules
          ~/.cache
        key: ${{ runner.os }}-deps-${{ hashFiles('**/package-lock.json') }}
        
    - name: Install dependencies
      run: npm install

  test:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Restore dependencies from cache
      uses: actions/cache@v3
      with:
        path: |
          node_modules
          ~/.cache
        key: ${{ runner.os }}-deps-${{ hashFiles('**/package-lock.json') }}
        
    - name: Run tests
      run: npm test 

  build:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Restore dependencies from cache
      uses: actions/cache@v3
      with:
        path: |
          node_modules
          ~/.cache
        key: ${{ runner.os }}-deps-${{ hashFiles('**/package-lock.json') }}
        
    - name: Build project
      run: npm run build
      
    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: dist/
 
  deploy:
    runs-on: ubuntu-latest
    needs: [test, build]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/ 
  
      - name: Verify downloaded files
        run: |
          ls -la dist/
          echo "Contents of dist directory:"
          find dist/ -type f
  
      - name: Setup SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          touch ~/.ssh/known_hosts
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
  
      - name: Deploy to server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          REMOTE_PATH: ${{ secrets.REMOTE_PATH }}
        run: |
          echo "Deploying files from:"
          ls -la dist/
          
          echo "Copying files to server..."
          scp -o StrictHostKeyChecking=no -r dist/* ${{ secrets.SERVER_USER }}@$SERVER_IP:$REMOTE_PATH
          
          echo "Restarting application..."
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@$SERVER_IP "
            chmod -R 755 $REMOTE_PATH &&
            cd $REMOTE_PATH && 
            ./restart.sh
          "
